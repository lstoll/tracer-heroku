// Code generated by protoc-gen-go.
// source: tracer.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	tracer.proto

It has these top-level messages:
	Trace
	Span
	Tag
	StoreRequest
	StoreResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Trace struct {
}

func (m *Trace) Reset()                    { *m = Trace{} }
func (m *Trace) String() string            { return proto.CompactTextString(m) }
func (*Trace) ProtoMessage()               {}
func (*Trace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Span struct {
	SpanId        uint64                     `protobuf:"varint,1,opt,name=span_id" json:"span_id,omitempty"`
	ParentId      uint64                     `protobuf:"varint,2,opt,name=parent_id" json:"parent_id,omitempty"`
	TraceId       uint64                     `protobuf:"varint,3,opt,name=trace_id" json:"trace_id,omitempty"`
	ServiceName   string                     `protobuf:"bytes,4,opt,name=service_name" json:"service_name,omitempty"`
	OperationName string                     `protobuf:"bytes,5,opt,name=operation_name" json:"operation_name,omitempty"`
	StartTime     *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=start_time" json:"start_time,omitempty"`
	FinishTime    *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=finish_time" json:"finish_time,omitempty"`
	Flags         uint64                     `protobuf:"varint,8,opt,name=flags" json:"flags,omitempty"`
	Tags          []*Tag                     `protobuf:"bytes,9,rep,name=tags" json:"tags,omitempty"`
}

func (m *Span) Reset()                    { *m = Span{} }
func (m *Span) String() string            { return proto.CompactTextString(m) }
func (*Span) ProtoMessage()               {}
func (*Span) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Span) GetStartTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Span) GetFinishTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

func (m *Span) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Tag struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// FIXME support non-string values
	Value string                     `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Time  *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Tag) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type StoreRequest struct {
	Spans []*Span `protobuf:"bytes,1,rep,name=spans" json:"spans,omitempty"`
}

func (m *StoreRequest) Reset()                    { *m = StoreRequest{} }
func (m *StoreRequest) String() string            { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()               {}
func (*StoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StoreRequest) GetSpans() []*Span {
	if m != nil {
		return m.Spans
	}
	return nil
}

type StoreResponse struct {
}

func (m *StoreResponse) Reset()                    { *m = StoreResponse{} }
func (m *StoreResponse) String() string            { return proto.CompactTextString(m) }
func (*StoreResponse) ProtoMessage()               {}
func (*StoreResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Trace)(nil), "Trace")
	proto.RegisterType((*Span)(nil), "Span")
	proto.RegisterType((*Tag)(nil), "Tag")
	proto.RegisterType((*StoreRequest)(nil), "StoreRequest")
	proto.RegisterType((*StoreResponse)(nil), "StoreResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Storer service

type StorerClient interface {
	Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error)
}

type storerClient struct {
	cc *grpc.ClientConn
}

func NewStorerClient(cc *grpc.ClientConn) StorerClient {
	return &storerClient{cc}
}

func (c *storerClient) Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error) {
	out := new(StoreResponse)
	err := grpc.Invoke(ctx, "/Storer/Store", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Storer service

type StorerServer interface {
	Store(context.Context, *StoreRequest) (*StoreResponse, error)
}

func RegisterStorerServer(s *grpc.Server, srv StorerServer) {
	s.RegisterService(&_Storer_serviceDesc, srv)
}

func _Storer_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorerServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Storer/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorerServer).Store(ctx, req.(*StoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Storer",
	HandlerType: (*StorerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Store",
			Handler:    _Storer_Store_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("tracer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x90, 0xcd, 0x6e, 0xea, 0x30,
	0x10, 0x85, 0xc5, 0x4d, 0x02, 0x64, 0xf8, 0xbb, 0xb5, 0xaa, 0x2a, 0x62, 0x85, 0xa2, 0xaa, 0x62,
	0xe5, 0x54, 0x74, 0xd9, 0x47, 0xe8, 0xae, 0xb0, 0x47, 0x86, 0x0e, 0xc6, 0x6a, 0x62, 0xbb, 0xb6,
	0x83, 0xc4, 0x4b, 0xf7, 0x19, 0x6a, 0x3b, 0x45, 0x6d, 0x57, 0xac, 0x66, 0xf2, 0xc5, 0x67, 0xce,
	0x99, 0x81, 0xb1, 0x33, 0x6c, 0x8f, 0x86, 0x6a, 0xa3, 0x9c, 0x9a, 0x3f, 0x73, 0xe1, 0x8e, 0xed,
	0x8e, 0xee, 0x55, 0x53, 0x71, 0x55, 0x33, 0xc9, 0xab, 0xf8, 0x63, 0xd7, 0x1e, 0x2a, 0xed, 0xce,
	0x1a, 0x6d, 0xe5, 0x44, 0x83, 0xd6, 0xb1, 0x46, 0xff, 0x74, 0x9d, 0xb8, 0x1c, 0x40, 0xb6, 0x09,
	0xc3, 0xca, 0xcf, 0x1e, 0xa4, 0x6b, 0xcd, 0x24, 0x99, 0xc1, 0xc0, 0xfa, 0xba, 0x15, 0x6f, 0x45,
	0x6f, 0xd1, 0x5b, 0xa6, 0xe4, 0x06, 0x72, 0xcd, 0x0c, 0x4a, 0x17, 0xd0, 0xbf, 0x88, 0xfe, 0xc3,
	0x30, 0x46, 0x08, 0x24, 0x89, 0xe4, 0x16, 0xc6, 0x16, 0xcd, 0x49, 0x78, 0x26, 0x59, 0x83, 0x45,
	0xea, 0x69, 0x4e, 0xee, 0x60, 0xaa, 0x34, 0x1a, 0xe6, 0x84, 0x92, 0x1d, 0xcf, 0x22, 0xa7, 0x00,
	0x3e, 0x84, 0x71, 0xdb, 0x10, 0xa7, 0xe8, 0x7b, 0x36, 0x5a, 0xcd, 0x29, 0x57, 0x8a, 0xd7, 0x48,
	0x2f, 0xe1, 0xe9, 0xe6, 0x92, 0x95, 0x54, 0x30, 0x3a, 0x08, 0x29, 0xec, 0xb1, 0x13, 0x0c, 0xae,
	0x0a, 0x26, 0x90, 0x1d, 0x6a, 0xc6, 0x6d, 0x31, 0x8c, 0xe9, 0x08, 0xa4, 0x2e, 0x7c, 0xe5, 0x8b,
	0xc4, 0x0b, 0x53, 0xba, 0x61, 0xbc, 0x7c, 0x81, 0xc4, 0x17, 0x32, 0x82, 0xe4, 0x1d, 0xcf, 0x71,
	0xd5, 0x3c, 0xc8, 0x4e, 0xac, 0x6e, 0x31, 0xae, 0x99, 0x93, 0xa5, 0x97, 0x05, 0xbf, 0xe4, 0x9a,
	0x5f, 0x79, 0x0f, 0xe3, 0xb5, 0x53, 0x06, 0x5f, 0xf1, 0xa3, 0xf5, 0xc8, 0x9f, 0x23, 0x0b, 0x47,
	0xb4, 0x7e, 0x6e, 0x70, 0xcc, 0x68, 0x38, 0x6d, 0x39, 0x83, 0xc9, 0xf7, 0x2b, 0xab, 0x95, 0xb4,
	0xb8, 0x7a, 0x84, 0x7e, 0x04, 0x86, 0x3c, 0x40, 0x16, 0x3b, 0x32, 0xa1, 0xbf, 0x07, 0xcd, 0xa7,
	0xf4, 0x8f, 0x62, 0xd7, 0x8f, 0xe6, 0x4f, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xac, 0xad, 0x33,
	0xe1, 0x03, 0x02, 0x00, 0x00,
}
